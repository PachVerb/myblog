{"version":3,"file":"static/js/Login.3d42f50e.chunk.js","mappings":"yPAeMA,EAAY,CAAE,aAAc,eAE5BC,EAAU,yCAAG,4GACV,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACTF,EAAI,KACL,GAAE,IACJ,KALgB,2CAAH,qDA0IhB,MAnIA,WACE,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAwBJ,EAAAA,EAAAA,WAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAwBN,EAAAA,EAAAA,UAAS,WAAjC,eAAOO,EAAP,KAAaC,EAAb,KACA,GAA8BR,EAAAA,EAAAA,WAAS,GAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KACA,GAA0BV,EAAAA,EAAAA,UAAS,GAAnC,eAAOW,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAM,yCAAG,4FACA,UAATd,GAA6B,aAATE,EADX,wBAEXK,EAAQ,WACFQ,EAAO,CACXf,KAAAA,EACAE,KAAAA,GAEFO,GAAW,GAPA,SAQLf,IARK,OASXsB,eAAeC,QAAQ,OAAQF,GAC/BG,IACApB,YAAW,WACTa,EAAS,GACTC,EAAS,IAAK,CACZO,SAAS,GAEZ,GAAE,KAEHV,GAAW,GAlBA,wBAoBXS,IACAX,EAAQ,WArBG,4CAAH,qDAgCNW,EAAc,WAClBb,GAAQ,EACT,EACKe,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJjB,GAAQ,EACT,EACD,OACE,iBAAKkB,UAAU,aAAf,WAEE,kBAAMC,OAAO,IAAID,UAAU,aAA3B,WACE,kBAAOE,QAAQ,OAAf,UACE,SAACC,EAAA,EAAD,CACEC,MAAM,eACNC,WAAS,EACTC,QAAQ,SACRC,KAAK,QACLC,GAAG,OACHC,SAAU,SAACC,GAAD,OAAOhC,EAAQgC,EAAEC,OAAOC,MAAxB,EACVC,WAAY3C,OAGhB,mBACA,kBAAOgC,QAAQ,OAAf,UACE,SAACC,EAAA,EAAD,CACEE,WAAS,EACTD,MAAM,eACNE,QAAQ,SACRvB,KAAK,WACLwB,KAAK,QACLC,GAAG,OACHC,SAAU,SAACC,GAAD,OAAO9B,EAAQ8B,EAAEC,OAAOC,MAAxB,EACVC,WAAY3C,OAGhB,mBACA,SAAC4C,EAAA,EAAD,CACEC,MAAO,CAAEC,UAAW,QACpBC,QAAS1B,EACTN,QAASA,EACTqB,QAAQ,WAJV,8BAUF,gBAAKN,UAAU,UAAf,UACE,gBAAKkB,MAAM,6BAA6BC,QAAQ,eAAhD,UACE,iBACEC,KAAK,UACLC,YAAY,IACZC,EAAE,sCAKE,YAATvC,GACC,SAACwC,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,iBAAkB,IAClB9C,KAAMA,EACN+C,QAAS/B,EAJX,UAME,SAACgC,EAAA,EAAD,CAAOD,QAAS/B,EAAaiC,SAAU/C,EAAMgD,GAAI,CAAEC,MAAO,QAA1D,qDAKF,SAACT,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,iBAAkB,IAClB9C,KAAMA,EACN+C,QAAS/B,EAJX,UAME,UAACgC,EAAA,EAAD,CAAOD,QAAS/B,EAAaiC,SAAU/C,EAAMgD,GAAI,CAAEC,MAAO,QAA1D,4CACSnD,EAAO,GArFtBoD,aAAY,WACN9C,EAAQ,GACVC,EAASD,EAAQ,EAEpB,GAAE,KACIA,GAgF6BA,EAD9B,8BAOT,C","sources":["pages/login/index.jsx"],"sourcesContent":["/*\r\n * @LastEditTime: 2022-10-05 07:21:01\r\n * @Description:\r\n * @Date: 2022-09-28 17:52:20\r\n * @Author: wangshan\r\n * @LastEditors: wangshan\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Snackbar, TextField, Alert } from \"@mui/material\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\n\r\nimport \"./login.css\";\r\n\r\nconst ariaLabel = { \"aria-label\": \"description\" };\r\n\r\nconst querylogin = async () => {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      res(\"ok\");\r\n    }, 3000);\r\n  });\r\n};\r\nfunction Login() {\r\n  const [name, setName] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [type, setType] = useState(\"success\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [count, setCount] = useState(6);\r\n  const navigate = useNavigate();\r\n\r\n  const submit = async () => {\r\n    if (name === \"admin\" && pass === \"admin123\") {\r\n      setType(\"success\");\r\n      const user = {\r\n        name,\r\n        pass,\r\n      };\r\n      setLoading(true);\r\n      await querylogin();\r\n      sessionStorage.setItem(\"user\", user);\r\n      handleClick();\r\n      setTimeout(() => {\r\n        setCount(6);\r\n        navigate(\"/\", {\r\n          replace: true,\r\n        });\r\n      }, 6000);\r\n\r\n      setLoading(false);\r\n    } else {\r\n      handleClick();\r\n      setType(\"warning\");\r\n    }\r\n  };\r\n  const indot = () => {\r\n    setInterval(() => {\r\n      if (count > 0) {\r\n        setCount(count - 1);\r\n      }\r\n    }, 1000);\r\n    return count;\r\n  };\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"login-page\">\r\n      {/* <h3>Hi 白菜</h3> */}\r\n      <form action=\"#\" className=\"login-form\">\r\n        <label htmlFor=\"name\">\r\n          <TextField\r\n            label=\"账号\"\r\n            fullWidth\r\n            variant=\"filled\"\r\n            size=\"small\"\r\n            id=\"name\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            inputProps={ariaLabel}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label htmlFor=\"pass\">\r\n          <TextField\r\n            fullWidth\r\n            label=\"密码\"\r\n            variant=\"filled\"\r\n            type=\"password\"\r\n            size=\"small\"\r\n            id=\"pass\"\r\n            onChange={(e) => setPass(e.target.value)}\r\n            inputProps={ariaLabel}\r\n          />\r\n        </label>\r\n        <br />\r\n        <LoadingButton\r\n          style={{ marginTop: \"24px\" }}\r\n          onClick={submit}\r\n          loading={loading}\r\n          variant=\"outlined\"\r\n        >\r\n          登陆\r\n        </LoadingButton>\r\n      </form>\r\n\r\n      <div className=\"foot-bg\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n          <path\r\n            fill=\"#0099ff\"\r\n            fillOpacity=\"1\"\r\n            d=\"M0,160L1440,0L1440,320L0,320Z\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n\r\n      {type !== \"success\" ? (\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          autoHideDuration={6000}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity={type} sx={{ width: \"100%\" }}>\r\n            账号密码错误\r\n          </Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          autoHideDuration={6000}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity={type} sx={{ width: \"100%\" }}>\r\n            登陆成功!，{open > 0 ? indot() : count}s 后跳转\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Login;\r\n"],"names":["ariaLabel","querylogin","Promise","res","rej","setTimeout","useState","name","setName","pass","setPass","open","setOpen","type","setType","loading","setLoading","count","setCount","navigate","useNavigate","submit","user","sessionStorage","setItem","handleClick","replace","handleClose","event","reason","className","action","htmlFor","TextField","label","fullWidth","variant","size","id","onChange","e","target","value","inputProps","LoadingButton","style","marginTop","onClick","xmlns","viewBox","fill","fillOpacity","d","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","sx","width","setInterval"],"sourceRoot":""}